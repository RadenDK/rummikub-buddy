name: Deploy Rummikub Buddy Client

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out your code
      - name: Checkout Code
        uses: actions/checkout@v2

      # Step 2: Build the Docker image for the Laravel client
      - name: Build Docker Image
        run: |
          docker build \
            -t rummikub_buddy_client:latest \
            -f laravel-client/Dockerfile \
            laravel-client

      # Step 3: Save the Docker image as a tar file for easy transfer
      - name: Save Docker Image as Tarball
        run: docker save rummikub_buddy_client:latest -o image.tar

      # Step 4: (Optional) set permissions for the tar file
      - name: Set permissions for Tarball
        run: chmod 755 image.tar

      # Step 5: Copy the Docker image tar file to the VPS
      - name: Copy image to VPS
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          source: image.tar
          target: /root/

      # Step 6: SSH into the VPS and deploy the Docker image
      - name: SSH into VPS and deploy Docker image
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_IP }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            # 1. Load the new image
            docker load -i /root/image.tar

            # 2. Stop & remove the old container if it exists
            docker stop rummikub_buddy_client || true
            docker rm rummikub_buddy_client || true

            # 3. Run the new container with environment variables
            docker run -d --restart=always -p 7002:80 \
              --name rummikub_buddy_client \
              -e APP_KEY="${{ secrets.CLIENT_APP_KEY }}" \
              -e APP_ENV=production \
              -e APP_DEBUG=true \
              -e LOG_CHANNEL=single \
              -e API_BASE_ENDPOINT="${{ secrets.API_BASE_ENDPOINT }}" \
              -e X_API_KEY="${{ secrets.API_KEY }}" \
              -e GOOGLE_CLIENT_ID="${{ secrets.GOOGLE_CLIENT_ID }}" \
              -e GOOGLE_CLIENT_SECRET="${{ secrets.GOOGLE_CLIENT_SECRET }}" \
              -e GOOGLE_REDIRECT_URI="${{ secrets.GOOGLE_REDIRECT_URI }}" \
              rummikub_buddy_client:latest

            # 4. (Optional) Clean up the tarball
            rm -f /root/image.tar

            # 5. Clean up old Docker images
            docker image prune -f

      # Step 7: (Optional) Clean up local tarball on the GitHub runner
      - name: Clean Up Local Tarball
        run: rm -f image.tar